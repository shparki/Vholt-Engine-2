package io.shparki.vholt;

import io.shparki.vholt.gfx.Window;
import io.shparki.vholt.io.Input;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.image.BufferStrategy;

public class Engine extends Canvas implements Runnable{
	
	public static final int TARGET_UPS = 60;
	public static final long SECOND = 1_000_000_000L;
	public static final long PERIOD = SECOND / TARGET_UPS;
	private int currentUPS, currentFPS;
	private int UPS, FPS;
	
	private int width, height;
	private String title, version;
	private volatile boolean running;
	private volatile Thread animator;
	
	private BufferStrategy bs;
	private Graphics2D g2d;
	
	
	public Engine(int width, int height, String title, String version){
		this.width = width;
		this.height = height; 
		this.title = title;
		this.version = version;
	
		Window.create(width, height, title + " | " + version, this);
		start();
	}
	public Engine(){ this (800, 600, "", ""); }
	
	
	public synchronized void start(){
		if (!running || animator == null){
			animator = new Thread(this, "Animator");
			animator.start();
		}
	}
	public synchronized void stop(){
		running = false;
	}
	
	public void run(){
		
		
		running = true;
		while (running){
			
		}
		System.exit(0);
	}
	
	public void update(){
		if (Input.isKeyPressed(KeyEvent.VK_W)) { System.out.print(":"); }
		if (Input.isKeyDown(KeyEvent.VK_W)) { System.out.print("-"); }
		if (Input.isKeyReleased(KeyEvent.VK_W)) { System.out.print(")"); }
	}
	public void render(){
		if (bs == null){
			bs = getBufferStrategy();
			if (bs == null){
				createBufferStrategy(3);
				return;
			}
		}
		
		g2d = (Graphics2D) bs.getDrawGraphics();
		
		g2d.setColor(Color.BLACK);
		g2d.fillRect(0, 0, Window.getWidth(), Window.getHeight());
		
		bs.show();
		g2d.dispose();
	}
	
}
